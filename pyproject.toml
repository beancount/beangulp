[build-system]
requires = ['setuptools >= 77.0.3']
build-backend = 'setuptools.build_meta'

[project]
name = 'beangulp'
version = '0.3.0.dev0'
license = 'GPL-2.0-only'
license-files = ['LICENSE']
description = 'Importers Framework for Beancount'
readme = 'README.rst'
authors = [
    { name = 'Martin Blais', email = 'blais@furius.ca' },
    { name = 'Daniele Nicolodi', email = 'daniele@grinta.net' },
]
maintainers = [
    { name = 'Daniele Nicolodi', email = 'daniele@grinta.net' },
]
keywords = ['accounting', 'ledger', 'beancount', 'importer', 'import', 'converter', 'conversion']
classifiers = [
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Topic :: Office/Business :: Financial :: Accounting',
    'Topic :: Text Processing :: General',
]
requires-python = '>=3.7'
dependencies = [
    'beancount >=2.3.5',
    'beautifulsoup4',
    'chardet',
    'click >8.0',
    'deprecation >=2.1.0', # Python 3.13 provides warnings.deprecated().
    'lxml',
    'python-magic >=0.4.12; sys_platform != "win32"',
]

[project.optional-dependencies]
petl = [
    'petl',
]

[project.urls]
homepage = 'https://github.com/beancount/beangulp'
issues = 'https://github.com/beancount/beangulp/issues'

[dependency-groups]
test = [
    'pytest',
]

[tool.setuptools.packages.find]
include = ['beangulp*']

[tool.ruff]
line-length = 92  # Same as Beancount's.
lint.select = ['E', 'F', 'W', 'UP', 'B', 'C4', 'PL', 'RUF']
lint.ignore = [
    'B007',
    'B020',
    'E501',
    'E731',
    'PLR0911',
    'PLR0912',
    'PLR0913',
    'PLR0915',
    'PLR2004',
    'PLW2901',
    'RUF012',
    'UP015',
    'UP032',
]

[tool.pytest.ini_options]
minversion = '6.0'
addopts = ['--doctest-glob=*.rst']
doctest_optionflags = ['ELLIPSIS', 'NORMALIZE_WHITESPACE']
testpaths = ['beangulp']
